---
apiVersion: v1
data:
  conf.json: '{"addStorage": [{"name": "second\"", "path": "__DIR__/videos2"}], "cpuUsageMarker":
    "%Cpu(s)", "cron": {"key": "change_this_to_something_very_RANDOM__just_anything_other_than_THIS"},
    "db": {"database": "shinobi_cctv", "host": "mysql.default.svc.cluster.local",
    "password": "somepassword", "port": 3306, "user": "shinboi_cctv_user"}, "detectorMergePamRegionTriggers":
    true, "mail": {"auth": {"pass": "you_password_OR_app_specific_password", "user":
    "your_email@gmail.com"}, "service": "gmail"}, "passwordType": "sha256", "pluginKeys":
    {}, "port": 8080}
    '
  super.json: '[{ "mail": "cristi@example.com", "pass": "changeme_md5sum"
    }]
    '
kind: ConfigMap
metadata:
  labels:
    app: shinobi-cctv
    chart: shinobi-cctv-0.1
    heritage: ddk8s
    release: shinobi-cctv
  name: shinobi-cctv
  namespace: shinobi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shinobi-cctv
    chart: shinobi-cctv-0.1
    heritage: ddk8s
    release: shinobi-cctv
    workload.user.cattle.io/workloadselector: deployment-shinobi-cctv
  name: shinobi-cctv
  namespace: shinobi
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-shinobi-cctv
  template:
    metadata:
      labels:
        app: shinobi-cctv
        workload.user.cattle.io/workloadselector: deployment-shinobi-cctv
    spec:
      containers:
      - image: shinobisystems/shinobi:latest
        name: shinobi-cctv
        resources: {}
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: shinobi
          subPath: mysql.20211024
        - mountPath: /opt/shinobi/videos
          name: shinobi
          subPath: videos.20211024
        - mountPath: /config
          name: config
        - mountPath: /dev/shm
          name: dshm     
      securityContext:
        fsGroup: 101
      dnsPolicy: ClusterFirst 
      volumes:
      - name: shinobi
        persistentVolumeClaim:
          claimName: shinobi-cctv
      - configMap:
          name: shinobi-cctv
        name: config
      - name: dshm
        emptyDir:
            medium: Memory
            sizeLimit: "5G"

# ---
# apiVersion: v1
# data:
#   auth: http_encoded_auth_info
# kind: Secret
# metadata:
#   name: camera.mydomain.com
#   namespace: shinobi

# ---
# apiVersion: v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/auth-realm: Authentication Required - camera.mydomain.com
#     nginx.ingress.kubernetes.io/auth-secret: camera.mydomain.com
#     nginx.ingress.kubernetes.io/auth-type: basic
#   name: camera.mydomain.com
#   namespace: shinobi
# spec:
#   rules:
#   - host: camera.mydomain.com
#     http:
#       paths:
#       - backend:
#           serviceName: shinobi-cctv
#           servicePort: 8080
#   tls:
#   - hosts:
#     - camera.mydomain.com
#     secretName: cert-mydomain-com

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: shinobi-cctv
    chart: shinobi-cctv-0.1
    heritage: ddk8s
    release: shinobi-cctv
  name: shinobi-cctv
  namespace: shinobi
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: shinobi-cctv
    chart: shinobi-cctv-0.1
    heritage: ddk8s
    release: shinobi-cctv
  annotations:
    external-dns.alpha.kubernetes.io/hostname: shinobi.internal  
  name: shinobi-cctv
  namespace: shinobi
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: shinobi-cctv
  type: LoadBalancer